name: Basic CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_push:
    name: Build and Push Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    outputs:
      image_name: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CI_CD_Token }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  ### ADDED: New job for static analysis of Dockerfile ###
  scan_config:
    name: Scan Dockerfile with Checkov
    runs-on: ubuntu-latest
    permissions:
      contents: read # нужно для скачивания кода
      security-events: write # нужно для загрузки отчета

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Checkov scan
        uses: bridgecrewio/checkov-action@v12
        with:
          framework: dockerfile # Сканируем только Dockerfile
          output_format: sarif
          output_file_path: checkov-results.sarif
          # По умолчанию (soft_fail: false) работа провалится, если будут найдены проблемы.
          # Это гарантирует, что "новый тест" остановит pipeline при ошибке.

      - name: Upload Checkov scan results to GitHub Security tab
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'checkov-results.sarif'
  
  scan_image:
    name: Scan Image for Vulnerabilities
    runs-on: ubuntu-latest
    needs: build_and_push
    permissions:
      contents: read
      packages: read
      security-events: write

    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CI_CD_Token }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ needs.build_and_push.outputs.image_name }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true
          exit-code: '1' # Этот "старый тест" уже настроен на провал при ошибке
          github-pat: ${{ secrets.CI_CD_Token }}

      - name: Upload Trivy scan results to GitHub Security tab
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  # deploy:
  #   name: Deploy to Production
  #   ### CHANGED: Now depends on both scans completing successfully ###
  #   needs: [scan_image, scan_config]
  #   runs-on: self-hosted

  #   steps:
  #     - name: Log in to the Container registry
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GHCR_PAT }}

  #     - name: Deploy application
  #       run: |
  #         docker stop my-nginx-app || true
  #         docker rm my-nginx-app || true
          
  #         # May be mistake
  #         docker pull ${{ env.IMAGE_NAME }}:latest
          
  #         docker run -d --name my-nginx-app -p 80:80 ${{ env.IMAGE_NAME }}:latest
